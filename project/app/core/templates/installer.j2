{% extends "base.j2" %}

{% block content %}
<div class="container mx-auto px-4 py-8 max-w-2xl">
    <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">Configuración del Sistema</h1>
        
        <!-- Formulario de configuración inicial -->
        <form id="installForm" method="POST" class="{% if status.completed %}hidden{% endif %}">
            <div class="mb-4">
                <label class="flex items-center space-x-2 mb-4 cursor-pointer">
                    <input type="checkbox" 
                           id="toggleCreds" 
                           name="use_custom_creds"
                           class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                    <span class="text-gray-700">Usar credenciales personalizadas</span>
                </label>
                
                <div id="credentialsSection" class="hidden space-y-4 pl-6 border-l-2 border-blue-200">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Usuario Admin</label>
                        <input type="text"
                               name="admin_username" 
                               placeholder="admin"
                               class="w-full px-3 py-2 border rounded-md focus:ring-blue-500 focus:border-blue-500"
                               pattern="[A-Za-z0-9]{3,20}"
                               title="Solo letras y números (3-20 caracteres)">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Contraseña Admin</label>
                        <input type="password" 
                               name="admin_password" 
                               placeholder="admin123"
                               minlength="8"
                               class="w-full px-3 py-2 border rounded-md focus:ring-blue-500 focus:border-blue-500"
                               required>
                        <p class="text-xs text-gray-500 mt-1">Mínimo 8 caracteres</p>
                    </div>
                </div>
            </div>
            
            <div class="mb-6">
                <label class="flex items-center space-x-2 cursor-pointer">
                    <input type="checkbox" 
                           name="create_demo" 
                           value="true"
                           checked
                           class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                    <span class="text-gray-700">Crear datos de demostración</span>
                </label>
            </div>
            
            <button type="submit" 
                    class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md transition-colors
                           disabled:opacity-50 disabled:cursor-not-allowed"
                    id="submitBtn">
                Iniciar Instalación
            </button>
        </form>

        <!-- Progreso de la instalación -->
        <div id="installationProgress" class="{% if not status.completed %}hidden{% endif %}">
            <div class="space-y-4">
                {% for step in status.steps %}
                <div id="step-{{ loop.index0 }}" 
                     class="flex items-center p-3 rounded-md border transition-colors duration-300
                            {% if step.status == 'in_progress' %}bg-blue-50 border-blue-200
                            {% elif step.status == 'completed' %}bg-green-50 border-green-200
                            {% elif step.status == 'failed' %}bg-red-50 border-red-200
                            {% else %}bg-gray-50 border-gray-200{% endif %}">
                    <div class="ml-3 flex-1 min-w-0">
                        <div class="flex justify-between items-center">
                            <p class="text-sm font-medium text-gray-700 truncate">{{ step.name }}</p>
                            {% if step.status == 'completed' %}
                                <svg class="h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                </svg>
                            {% elif step.status == 'failed' %}
                                <svg class="h-5 w-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                                </svg>
                            {% endif %}
                        </div>
                        {% if step.error %}
                        <p class="text-sm text-red-600 mt-1 truncate">{{ step.error }}</p>
                        {% endif %}
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('installForm');
    const progress = document.getElementById('installationProgress');
    const toggleCreds = document.getElementById('toggleCreds');
    const credentialsSection = document.getElementById('credentialsSection');
    
    // Toggle credenciales personalizadas
    toggleCreds.addEventListener('change', (e) => {
        credentialsSection.classList.toggle('hidden', !e.target.checked);
        if (!e.target.checked) {
            form.querySelector('[name="admin_username"]').value = 'admin';
            form.querySelector('[name="admin_password"]').value = 'admin123';
        }
    });

    // Manejo del formulario
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const submitBtn = document.getElementById('submitBtn');
        submitBtn.disabled = true;
        
        try {
            progress.classList.remove('hidden');
            form.classList.add('hidden');
            
            const response = await fetch("{{ url_for('core.install') }}", {
                method: 'POST',
                body: new FormData(form),
                headers: { 'Accept': 'application/json' }
            });
            
            const data = await response.json();
            
            if (!response.ok) {
                handleErrors(data);
                return;
            }
            
            if (data.success) {
                window.location.href = data.redirect;
            }
        } catch (error) {
            console.error('Installation Error:', error);
            showGlobalError('Error de conexión con el servidor');
        } finally {
            submitBtn.disabled = false;
        }
    });

    function handleErrors(data) {
        // Actualizar estados de los pasos
        if (data.status?.steps) {
            data.status.steps.forEach((step, index) => {
                const stepElement = document.getElementById(`step-${index}`);
                if (!stepElement) return;
                
                stepElement.className = `flex items-center p-3 rounded-md border ${
                    step.status === 'in_progress' ? 'bg-blue-50 border-blue-200' :
                    step.status === 'completed' ? 'bg-green-50 border-green-200' :
                    step.status === 'failed' ? 'bg-red-50 border-red-200' : 'bg-gray-50 border-gray-200'
                }`;
                
                const errorElement = stepElement.querySelector('p.text-red-600');
                if (errorElement) {
                    errorElement.textContent = step.error || '';
                }
            });
        }
        
        if (data.error) {
            showGlobalError(data.error);
        }
    }

    function showGlobalError(message) {
        const errorDiv = document.createElement('div');
        errorDiv.className = 'mt-4 p-4 bg-red-50 border border-red-200 rounded-md';
        errorDiv.innerHTML = `
            <p class="text-red-600 font-medium">Error crítico:</p>
            <p class="text-red-600 mt-1">${message}</p>
        `;
        progress.parentNode.insertBefore(errorDiv, progress.nextSibling);
    }
});
</script>
{% endblock %}