{% extends "base.j2" %}
{# Variables específicas para esta vista de listado #}
{% set dashboard = true %}
{% set title = "Informes de Análisis" %}
{% set reports = True %} {# Para mostrar el botón "+ Crear Nuevo Informe" #}

{# Importar estilos y macros necesarios #}
{% from "settings/_ui_class.j2" import bg_color, border_color, hover_bg_color, text_color, base_button_classes, table_header_class, table_cell_class %}
{% from "macros/_button.j2" import button %}

{# Definir cabeceras y campos para la tabla de reportes #}
{% set table_headers = ["ID", "Título", "Finca / Lote", "Cultivo", "Fecha", "Autor"] %}
{% set item_fields = ["id", "title", "finca_lote", "crop", "date", "autor" ] %}

{# Macro para el dropdown de acciones (simplificado para solo ver) #}
{% macro report_action_dropdown(item_id) %}
<div class="relative inline-block text-left">
    <button type="button" class="{{ base_button_classes }} {{ border_color }} {{ bg_color }} {{ text_color }} {{ hover_bg_color }} focus:ring-indigo-500" id="options-menu-{{ item_id }}" aria-haspopup="true" aria-expanded="false" onclick="toggleDropdown('{{ item_id }}', event)">
        Acciones
        <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
    </button>
    <div class="hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg {{ bg_color }} ring-1 ring-black ring-opacity-5 z-50" role="menu" aria-orientation="vertical" aria-labelledby="options-menu-{{ item_id }}" id="dropdown-{{ item_id }}">
        <div class="py-1" role="none">
            <a href="{{ url_for('foliage_report.vista_reporte', report_id=item_id) }}" class="{{ text_color }} block px-4 py-2 text-sm {{ hover_bg_color }}" role="menuitem">
                Ver Reporte
            </a>
            {# Añadir más acciones si es necesario (ej. Borrar) #}
            {# <a href="#" class="{{ text_color }} block px-4 py-2 text-sm hover:bg-red-100 dark:hover:bg-red-700 text-red-700 dark:text-red-300" role="menuitem" onclick="confirmDelete('{{ item_id }}', event)">Borrar</a> #}
        </div>
    </div>
</div>
{% endmacro %}

{% block content %}
{# Título y botón de crear #}
<div class="sm:px-6 lg:px-8 flex justify-between items-center mb-4">
    <h1 class="text-2xl font-bold">{{ title }}</h1>
    {% if reports %}
        <a href="{{ url_for('foliage_report.generar_informe') }}" class="{{ base_button_classes }} bg-blue-600 hover:bg-blue-700 text-white focus:ring-blue-500">
            + Crear Nuevo Informe
        </a>
    {% endif %}
</div>

{# Cards de Información (Opcional) #}
{# <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 pb-6"> ... </div> #}

{# Tabla de Reportes #}
<div class="mx-auto max-w-8xl pb-6 sm:px-6 lg:px-8">
    <div class="px-4 py-2 sm:px-0">
        {# Aquí podrías añadir filtros si fueran necesarios #}

        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700 border rounded">
                <thead class="{{ bg_color }} dark:bg-gray-900">
                    <tr>
                        {% for header in table_headers %}
                        <th scope="col" class="{{ table_header_class }} text-gray-800 dark:text-gray-100">
                            {{ header }}
                        </th>
                        {% endfor %}
                        <th scope="col" class="{{ table_header_class }} text-gray-500">
                            Acciones
                        </th>
                    </tr>
                </thead>
                <tbody class="{{ bg_color }} divide-y divide-gray-200 dark:divide-gray-700">
                    {% if items %}
                        {% for item in items %}
                        <tr class="{{ hover_bg_color }}">
                            {% for field in item_fields %}
                            <td class="{{ table_cell_class }} {{ text_color }}">
                                {{ item[field] }}
                            </td>
                            {% endfor %}
                            <td class="{{ table_cell_class }} font-medium text-right">
                                {{ report_action_dropdown(item.id) }}
                            </td>
                        </tr>
                        {% endfor %}
                    {% else %}
                        <tr>
                            <td colspan="{{ table_headers|length + 1 }}" class="px-4 py-4 text-center {{ text_color }}">
                                No hay reportes disponibles.
                            </td>
                        </tr>
                    {% endif %}
                </tbody>
            </table>
        </div>
    </div>
</div>

{# Modales (si implementas borrado u otras acciones modales) #}
{# ... #}

{% endblock %}

{% block extra_js %}
<script>
    // Función para alternar la visibilidad del dropdown
    function toggleDropdown(id, event) {
        event.stopPropagation(); // Previene que el clic cierre inmediatamente el dropdown
        const dropdown = document.getElementById(`dropdown-${id}`);
        const allDropdowns = document.querySelectorAll('.origin-top-right');
        // Cierra otros dropdowns abiertos
        allDropdowns.forEach(d => {
            if (d !== dropdown && !d.classList.contains('hidden')) {
                d.classList.add('hidden');
            }
        });
        // Alterna el dropdown actual
        dropdown.classList.toggle('hidden');
    }

    // Cierra todos los dropdowns si se hace clic fuera de ellos
    window.addEventListener('click', function (event) {
        // Verifica si el clic no fue dentro de un botón que abre dropdown o dentro de un dropdown
        if (!event.target.closest('[aria-haspopup="true"]') && !event.target.closest('.origin-top-right')) {
            document.querySelectorAll('.origin-top-right').forEach(dropdown => {
                if (!dropdown.classList.contains('hidden')) {
                    dropdown.classList.add('hidden');
                }
            });
        }
    });

    // (Opcional) Función para confirmar borrado
    function confirmDelete(id, event) {
        event.preventDefault(); // Previene la navegación si es un enlace
        if (confirm(`¿Está seguro de que desea eliminar el reporte ${id}?`)) {
            // Lógica para llamar a la API de borrado
            console.log(`Eliminar reporte ${id}`);
            // fetch(`/api/foliage/report/delete/${id}`, { method: 'DELETE', ... })
            // .then(...)
            // .catch(...);
        }
    }
</script>
{% endblock %}